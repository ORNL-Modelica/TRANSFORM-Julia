# Example 1.2-1 from Heat Transfer by Greg Nellis and Sandy Klein
# Liquid Oxygen Dewar heat transfer network
# Part a & b) Use thermal resistances network to investigate steady state rate of heat transfer to the liquid oxygen
component Part_ab_ThermalResistances
    parameter T_LiquidOxygen::Temperature = 95.6
    parameter T_Ambient::Temperature = 293.15

    parameter r_inner::Length = 0.1
    parameter th_1::Length = 0.0025
    parameter th_ins::Length = 0.01
    parameter th_2::Length = 0.0025

    final parameter r_ins_inner::Length = r_inner + th_1
    final parameter r_ins_outer::Length = r_ins_inner + th_ins
    final parameter r_outer::Length = r_ins_outer + th_2

    variable Q_total::Power

    final constant pi::Real = 3.14159 

    boundary_LiquidOxygen = TemperatureBoundary(T=T_LiquidOxygen)
    boundary_Ambient = TemperatureBoundary(T=T_Ambient)
    convectionInner = Convection(surfaceArea=4*pi*r_inner^2,alpha=150)
    linerInner = Sphere(r_inner=r_inner,r_outer=r_ins_inner,lambda=15)
    contact_1 = Contact(surfaceArea=4*pi*r_ins_inner^2,Rc_pp=0.003)
    insulation = Sphere(r_inner=r_ins_inner,r_outer=r_ins_outer,lambda=0.033)
    contact_2 = Contact(surfaceArea=4*pi*r_ins_outer^2,Rc_pp=0.003)
    linerOuter = Sphere(r_inner=r_ins_outer,r_outer=r_outer,lambda=15)
    radiationOuter = Radiation(surfaceArea=4*pi*r_outer^2,epsilon=0.7)
    convectionOuter = Convection(surfaceArea=4*pi*r_outer^2,alpha=6.0)
relations
    initial Q_total = 0.0

    connect(convectionInner.port_a,boundary_LiquidOxygen.port)
    connect(convectionInner.port_b,linerInner.port_a)
    connect(linerInner.port_b,contact_1.port_a)
    connect(contact_1.port_b,insulation.port_a)
    connect(insulation.port_b,contact_2.port_a)
    connect(contact_2.port_b,linerOuter.port_a)

    # Condensed - choose 1
    connect(linerOuter.port_b,radiationOuter.port_a,convectionOuter.port_a)
    connect(convectionOuter.port_b, radiationOuter.port_b,boundary_Ambient.port)

    # Expanded - choose 1
    #connect(linerOuter.port_b,radiationOuter.port_a)
    #connect(linerOuter.port_b,convectionOuter.port_a)
    #connect(radiationOuter.port_b,boundary_Ambient.port)
    #connect(convectionOuter.port_b,boundary_Ambient.port)

    der(Q_total) = convectionInner.port_a.Q_flow
end

analysis SimPart_ab_ThermalResistances
    extends TransientAnalysis(stop=1)
    model = Part_ab_ThermalResistances()
end